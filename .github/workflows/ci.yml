name: Build and Push Image to Azure ACR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      DEPLOY_GITOPS_REPO: 'zohebs341/flux-aks'
      DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      
      
    - name: 'Docker Login to Azure ACR'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Build, tag, and push image to Azure ACR
      env:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
    
      run: |
          # Build a docker container and push it to Azure ACR
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          docker build -t zohflux.azurecr.io/zohflux:$git_hash .
          echo "Pushing image to Azure ACR..."
          docker push zohflux.azurecr.io/zohflux:$git_hash
    
    - name: Update Version
      run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          tag=$(cat ./helm-app/values.yaml | grep tag: | awk '{print $2}')
          sed -i "s/$tag/$git_hash/" ./helm-app/values.yaml
          
    - name: Commit and push changes
      uses: devops-infra/action-commit-push@v0.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: Version updated
        
        
    - name: Build an image from Dockerfile
      run: |
          docker build -t zohflux.azurecr.io/zohflux:${{ github.sha }} .
          
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'zohflux.azurecr.io/zohflux:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        
    - name: 'Docker Login to Azure ACR'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Publish Helm OCI
      run: |
        VERSION=$(yq e '.Values.image.tag' helm-app/values.yaml)
        mkdir helm-release
        helm package helm-app/ -d helm-release
        helm push helm-release/helm-app-${VERSION}.tgz oci://zohflux.azurecr.io/zohflux
